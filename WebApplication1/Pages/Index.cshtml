@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<style>
    /* Ваши существующие стили */
    #initialContent, #cardsContainer {
        transition: all 0.5s ease-in-out;
    }

    .hidden {
        opacity: 0;
        transform: translateY(20px);
        height: 0;
        overflow: hidden;
        pointer-events: none;
    }

    .visible {
        opacity: 1;
        transform: translateY(0);
        height: auto;
    }

    .cards-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        transform: scale(0.95);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: scale(1.02);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .container_serch {
        width: 100%;
        margin: 20px 0;
        transition: margin 0.5s ease;
    }

    .serch_field {
        width: 100%;
        padding: 12px 20px;
        border-radius: 25px;
        border: 1px solid #ddd;
        font-size: 16px;
        box-sizing: border-box;
        transition: all 0.3s ease;
    }

        .serch_field:focus {
            border-color: #4CAF50;
            box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);
        }

    .loader {
        border: 4px solid #f3f3f3;
        border-top: 4px solid #4CAF50;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        animation: spin 1s linear infinite;
        margin: 20px auto;
        display: none;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>

<div id="initialContent" class="visible">
    <h2>@Model.Message</h2>
    <h3 id="currentTime">Time: @Model.PrintTime()</h3>
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <h1>Super Shop</h1>
    </div>
</div>

<div id="loader" class="loader"></div>
<form method="post" class="container_serch" id="searchForm">
    <input type="text" name="searchQuery" class="serch_field" id="searchInput" placeholder="Поиск товаров..." />
</form>
<div id="cardsContainer" class="cards-container hidden">
    <!-- Карточки будут добавляться динамически -->
</div>



@section Scripts {
    <script>
        function updateTime() {
            fetch('?handler=CurrentTime')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('currentTime').textContent = `Time: ${data.time}`;
                });
        }
        setInterval(updateTime, 1000);
        updateTime();

        // Обработчик формы
        document.getElementById('searchForm').addEventListener('submit', function(e) {
            e.preventDefault(); // Предотвращаем стандартную отправку формы
            const searchValue = document.getElementById('searchInput').value.trim();

            if (searchValue.length > 0) {
                searchProducts(searchValue);
            }
        });

        // Функция для поиска товаров
        function searchProducts(query) {
            const initialContent = document.getElementById('initialContent');
            const cardsContainer = document.getElementById('cardsContainer');
            const loader = document.getElementById('loader');

            // Показываем loader
            loader.style.display = 'block';

            // Скрываем начальный контент
            initialContent.classList.remove('visible');
            initialContent.classList.add('hidden');

            // Скрываем предыдущие карточки
            cardsContainer.classList.remove('visible');
            cardsContainer.classList.add('hidden');
            cardsContainer.innerHTML = ''; // Очищаем контейнер

            // Отправляем запрос на сервер
            fetch(`?handler=Search&query=${encodeURIComponent(query)}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // Обрабатываем полученные данные
                    if (data && data.length > 0) {
                        renderCards(data);
                    } else {
                        cardsContainer.innerHTML = '<p class="no-results">Товары не найдены</p>';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    cardsContainer.innerHTML = '<p class="error-message">Произошла ошибка при поиске</p>';
                })
                .finally(() => {
                    loader.style.display = 'none';
                    cardsContainer.classList.remove('hidden');
                    cardsContainer.classList.add('visible');
                });
        }

        // Функция для отрисовки карточек
        function renderCards(products) {
            const cardsContainer = document.getElementById('cardsContainer');

            products.forEach((product, index) => {
                const card = document.createElement('div');
                card.className = 'card';
                card.innerHTML = `
                    <h3>${product.name}</h3>
                    <p>${product.description}</p>
                    <p class="price">Цена: $${product.price}</p>
                `;

                // Добавляем анимацию появления с задержкой
                card.style.opacity = '0';
                card.style.transform = 'scale(0.95)';
                cardsContainer.appendChild(card);

                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.transform = 'scale(1)';
                }, index * 100);
            });
        }

        // Обработчик ввода (опционально, если нужно искать при вводе)
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchValue = e.target.value.trim();
            if (searchValue.length === 0) {
                const initialContent = document.getElementById('initialContent');
                const cardsContainer = document.getElementById('cardsContainer');

                cardsContainer.classList.remove('visible');
                cardsContainer.classList.add('hidden');
                cardsContainer.innerHTML = '';

                initialContent.classList.remove('hidden');
                initialContent.classList.add('visible');
            }
        });
    </script>
}